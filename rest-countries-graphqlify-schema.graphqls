"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @payload on ARGUMENT_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Mutation {
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/StripeRest.java:30:5]"
  contribute(contribution: ContributionInput): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:192:5]"
  doPOST: JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:220:5]"
  doPOSTReturnsJSON: JSON
}

type Query {
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:32:5]"
  getAllCountries: JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:27:5]"
  getAllCountriesUsingFields(fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:44:5]"
  getByAlpha(alpha: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:40:5]"
  getByAlphaUsingAlphaAndFields(alpha: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:58:5]"
  getByAlphaList(codes: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:54:5]"
  getByAlphaListUsingCodesAndFields(codes: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:112:5]"
  getByCallingCode(callingcode: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:108:5]"
  getByCallingCodeUsingCallingcodeAndFields(callingcode: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:128:5]"
  getByCapital(capital: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:124:5]"
  getByCapitalUsingCapitalAndFields(capital: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:77:5]"
  getByCurrency(currency: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:73:5]"
  getByCurrencyUsingCurrencyAndFields(currency: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:188:5]"
  getByDemonym(demonym: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:176:5]"
  getByLanguage(language: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:172:5]"
  getByLanguageUsingLanguageAndFields(language: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:96:5]"
  getByName(name: String, fullText: Boolean): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:92:5]"
  getByNameUsingNameAndFullTextAndFields(name: String, fullText: Boolean, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:144:5]"
  getByRegion(region: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:140:5]"
  getByRegionUsingRegionAndFields(region: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:204:5]"
  getByRegionalBloc(regionalBlock: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:156:5]"
  getBySubRegion(subregion: String, fields: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:160:5]"
  getBySubregion(subregion: String): JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v1/rest/CountryRest.java:38:5]"
  getCountries: JSON
  "[/Users/amarees/IdeaProjects/restcountries/src/main/java/eu/fayder/restcountries/v2/rest/CountryRest.java:33:5]"
  getCountriesUsingFields(fields: String): JSON
}

scalar JSON

input ContributionInput {
  amount: Int
  token: String
}

